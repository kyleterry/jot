#!/bin/bash

set -euo pipefail

docker_repo=kyleterry/jot
archs="amd64 arm32v7 arm64v8"

. ./build-info.sh

build_images() {
    while read HASH ARCH VARIANT; do
        case "${ARCH}" in
            amd64   )
                qemu_arch="x86_64"
                variant=
                ;;
            arm     )
                qemu_arch="arm"
                variant="${VARIANT}"
                ;;
            arm64   )
                qemu_arch="aarch64"
                variant="${VARIANT}"
                ;;
            *       )
                continue
                ;;
        esac
        docker_file=Dockerfile."${ARCH}${variant}"
        cp Dockerfile.cross "${docker_file}"

        sed -i "s|__BASEIMAGE_HASH__|${HASH}|g" "${docker_file}"
        sed -i "s|__QEMU_ARCH__|${qemu_arch}|g" "${docker_file}"
        sed -i "s|__GOLANG_ARCH__|${ARCH}|g" "${docker_file}"

        if [ "${ARCH}" == "amd64" ]; then
            sed -i "/__CROSS_/d" "${docker_file}"
        else
            sed -i "s/__CROSS_//g" "${docker_file}"
            curl -Lfs "https://github.com/multiarch/qemu-user-static/releases/download/v3.1.0-3/x86_64_qemu-${qemu_arch}-static.tar.gz" | tar zxvf -
        fi

        version_tag="${docker_repo}":"${VERSION}"-"${ARCH}${variant}"

        docker build -f "${docker_file}" -t "${version_tag}" .

        if [ -z ${DIRTY+x} ]; then
            docker push "${version_tag}"
        fi

        rm "${docker_file}"
        rm -f qemu-"${qemu_arch}"-static
    done <<< $(docker manifest inspect alpine | jq -r '.manifests[] | "\(.digest) \(.platform.architecture) \(.platform.variant)"')
}

create_manifest() {
    local version
    version="${1}"

    manifest-tool push from-args \
        --platforms linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64/v8 \
        --template kyleterry/jot:"${version}"-ARCHVARIANT \
        --target kyleterry/jot:"${version}"
}

build_images

if [ -z "${DIRTY}" ]; then
    create_manifest "${VERSION}"
else
    echo -e "\n\nrepository state is dirty\nimages were created but not pushed"
fi
